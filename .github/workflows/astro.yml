# Workflow for building and deploying an Astro site to VPS
name: Deploy Astro site to VPS

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  BUILD_PATH: "."
  DEPLOY_PATH: "~/nginx/html/daedalus"

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ${{ env.BUILD_PATH }}

      - name: Build with Astro
        run: pnpm astro build
        working-directory: ${{ env.BUILD_PATH }}

      - name: Deploy to VPS
        run: |
          # Backup existing deployment if it exists
          if [ -d "${{ env.DEPLOY_PATH }}" ]; then
            sudo mv ${{ env.DEPLOY_PATH }} ${{ env.DEPLOY_PATH }}_backup
          fi
          
          # Create deploy directory if it doesn't exist
          sudo mkdir -p ${{ env.DEPLOY_PATH }}
          
          # Copy new build to deploy directory
          sudo cp -r ${{ env.BUILD_PATH }}/dist/* ${{ env.DEPLOY_PATH }}/
          
          # Set correct permissions
          sudo chown -R www-data:www-data ${{ env.DEPLOY_PATH }}
          sudo chmod -R 755 ${{ env.DEPLOY_PATH }}
          
          # Remove backup after successful deployment
          if [ -d "${{ env.DEPLOY_PATH }}_backup" ]; then
            sudo rm -rf ${{ env.DEPLOY_PATH }}_backup
          fi
          
          cd ${{ env.DEPLOY_PATH }}
          docker compose restart nginx
